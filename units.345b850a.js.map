{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./src/components/units/Main.tsx","./src/units.tsx"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","import React, { useState, useCallback, useEffect, FunctionComponent } from \"react\";\nimport \"./Main.css\";\nimport numeral from \"numeral\";\n\nlet id: number; // Should be per component\n\ntype Unit = {\n    name: string;\n    unit: string;\n    amount: number;\n}\n\n// TODO plural\nconst lengths: Unit[] = [\n    {name: \"kilometer\", unit: \"km\", amount: 1000},\n    {name: \"meter\", unit: \"m\", amount: 1},\n    {name: \"mile\", unit: \"mi\", amount: 1609.344},\n    {name: \"yard\", unit: \"yd\", amount: 0.9144},\n    {name: \"feet\", unit: \"ft\", amount: 0.03048},\n    {name: \"inch\", unit: \"in\", amount: 0.00254},\n]\n\nconst weights: Unit[] = [\n    {name: \"kilogram\", unit: \"kg\", amount: 1000},\n    {name: \"gram\", unit: \"g\", amount: 1},\n    {name: \"ton\", unit: \"t\", amount: 907200},\n    {name: \"hundredweight\", unit: \"cwt\", amount: 45360},\n    {name: \"quarter\", unit: \"qr\", amount: 11340},\n    {name: \"pound\", unit: \"lb\", amount: 453.6},\n    {name: \"ounce\", unit: \"oz\", amount: 28.35},\n    {name: \"dram\", unit: \"dr\", amount: 1.772},\n    {name: \"grain\", unit: \"gr\", amount: 0.06480},\n]\n\nconst times: Unit[] = [\n    {name: \"year\", unit: \"y\", amount: 60*60*24*365},\n    {name: \"week\", unit: \"w\", amount: 60*60*24*7},\n    {name: \"month\", unit: \"mo\", amount: 60*60*24*30},\n    {name: \"day\", unit: \"d\", amount: 60*60*24},\n    {name: \"hour\", unit: \"h\", amount: 60*60},\n    {name: \"minute\", unit: \"m\", amount: 60},\n    {name: \"second\", unit: \"s\", amount: 1},\n    {name: \"millisecond\", unit: \"ms\", amount: 0.001},\n]\n\nconst Main = () => {\n    const [text, setText] = useState(``);\n    const onChange = useCallback((e)=>{\n        setText(e.target.value);\n    }, [setText]);\n\n    const parsed = parse(text);\n    console.log(parsed);\n    return <>\n        <input value={text} onChange={onChange} style={{\n            fontSize: \"40px\",\n            width: \"100%\"\n        }} autoFocus placeholder=\"300lb in kg\" />\n        <h2>Length conversion</h2>\n        <UnitTable units={lengths} num={isNaN(parsed.num) ? 1 : parsed.num} filterUnit={parsed.unit} filterInUnit={parsed.inUnit} />\n        <h2>Weights conversion</h2>\n        <UnitTable units={weights} num={isNaN(parsed.num) ? 1 : parsed.num} filterUnit={parsed.unit} filterInUnit={parsed.inUnit} />\n        <h2>Time conversion</h2>\n        <UnitTable units={times} num={isNaN(parsed.num) ? 1 : parsed.num} filterUnit={parsed.unit} filterInUnit={parsed.inUnit} />\n    </>\n}\n\ntype Props = {\n    units: Unit[];\n    num: number,\n    filterUnit?: string;\n    filterInUnit?: string;\n}\n\nconst formatter = new Intl.NumberFormat();\n\nconst UnitTable: FunctionComponent<Props> = ({units, num, filterUnit, filterInUnit}) => {\n    return <table style={{textAlign: \"right\"}}>\n        <thead>\n            <tr>\n                <th></th>\n                {units.map(unitIn => <th style={{\n                    color: filterInUnit && (unitIn.unit.indexOf(filterInUnit)!=0 && unitIn.name.indexOf(filterInUnit)!=0) ? \"#aaa\" : null\n                }}>in {unitIn.name}</th>)}\n            </tr>\n        </thead>\n        <tbody>\n            {units.map(unit => <tr style={{\n                color: filterUnit && (unit.unit.indexOf(filterUnit)!=0 && unit.name.indexOf(filterUnit)!=0) ? \"#aaa\" : null\n            }}>\n                <th>{num} {unit.name}</th>\n                {units.map(unitIn => <td style={{\n                    color: filterInUnit && (unitIn.unit.indexOf(filterInUnit)!=0 && unitIn.name.indexOf(filterInUnit)!=0) ? \"#aaa\" : null\n                }}>\n                    {formatter.format(num * unit.amount / unitIn.amount)+unitIn.unit}\n                </td>)}\n            </tr>)}\n        </tbody>\n    </table>\n}\n\ntype ParseResult = {\n    num?: number,\n    unit?: string,\n    inUnit?: string\n}\n\nconst parse = (text: string) => {\n    if(text===\"\") return {num: NaN};\n    const num = parseFloat(text);\n    const match = /\\s*[\\d,.]*(.*)$/.exec(text);\n    if(!match) return {num};\n    const remaining = match[1].trim();\n    const [unit, inString, inUnit] = remaining.split(/\\s+/);\n    return {\n        num,\n        unit: unit ? unit.trim() : undefined,\n        inUnit: inString == \"in\" && inUnit ? inUnit.trim() : undefined\n    };\n}\n\nexport default Main;\n","import React from \"react\";\nimport {render} from \"react-dom\";\nimport Main from \"./components/units/Main\";\n\nrender(<Main />, document.getElementById(\"main\"));\n"],"names":["a","globalThis","self","window","global","__esModule","default","$6ec32b71838809efa7c73791c1e0afa8$var$lengths","name","unit","amount","$6ec32b71838809efa7c73791c1e0afa8$var$weights","$6ec32b71838809efa7c73791c1e0afa8$var$times","$6ec32b71838809efa7c73791c1e0afa8$export$default","text","setText","onChange","e","target","value","parsed","$6ec32b71838809efa7c73791c1e0afa8$var$parse","console","log","style","fontSize","width","autoFocus","placeholder","$6ec32b71838809efa7c73791c1e0afa8$var$UnitTable","units","num","isNaN","filterUnit","filterInUnit","inUnit","$6ec32b71838809efa7c73791c1e0afa8$var$formatter","Intl","NumberFormat","textAlign","map","unitIn","color","indexOf","format","NaN","parseFloat","match","exec","remaining","trim","inString","split","undefined","document","getElementById"],"version":3,"file":"units.345b850a.js.map"}